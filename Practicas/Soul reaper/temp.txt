!/usr/bin/env python2.7


import RPi.GPIO as GPIO
import LCD1602
import time

GPIO.setmode(GPIO.BCM)

Button = 17 # GPIO-24, pin 17
GPIO.setup(Button, GPIO.IN, pull_up_down=GPIO.PUD_UP)
presses = 0

# clear the display
LCD1602.init(0x27, 1)



def my_callback(Button):
    global presses
    # start
    if GPIO.input(Button) == 0:
        # write to terminal
        print "Button Pressed\t", presses
        if presses == 0:
         # write to terminal
         print "First!"
         # write to display
         LCD1602.init(0x27, 1)
         LCD1602.write(0, 0, 'Welcome')
         LCD1602.write(0, 1, 'press button')
        if presses == 1:
         # write to terminal
         print "Second!"
         # write to display
         LCD1602.init(0x27, 1)
         LCD1602.write(0, 0, 'You pressed button!')
         LCD1602.write(0, 1, '..press again.')
        if presses == 2:
         # write to terminal
         print "Third!"
         # write to display
         LCD1602.init(0x27, 1)
         LCD1602.write(0, 0, 'Pressed again!')
         LCD1602.write(0, 1, '(press button).')
        if presses == 3:
         # write to terminal
         print "Forth!"
         # write to display
         LCD1602.init(0x27, 1)
         LCD1602.write(0, 0, 'Scrolling works!')
         LCD1602.write(0, 1, 'press button')
        if presses == 4:
         # write to terminal
         print "Fifth!"
         # write to display
         LCD1602.init(0x27, 1)
         LCD1602.write(0, 0, 'Done!')
         LCD1602.write(0, 1, 'press button.')
        presses += 1
    return # not needed, just for clarity

GPIO.add_event_detect(Button, GPIO.FALLING, callback=my_callback)


try:
    print "Waiting"
    while True:
        pass # replace with any of your code

except KeyboardInterrupt:
    pass
finally:
    print "\nRelease our used channel(s)"
    GPIO.cleanup([Button])

def main():
    pass

if __name__ == '__main__':
    main()
